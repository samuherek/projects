name: Deploy Github Pages 

on:
  push: 
    branches: ["main"]
  workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Get Latest Artifacts
        id: get_artifact
        run: |
          REPO_OWNER="samuherek"

          jq -c '.projects[]' manifest.json | while read project; do
            REPO=$(echo "$project" | jq -r '.repo')
            echo "Getting the '$REPO' artifacts"

            API_URL="https://api.github.com/repos/${REPO_OWNER}/${REPO}/actions/artifacts"
            ARTIFACTS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" $API_URL)
            ARTIFACT_URL=$(echo "$ARTIFACTS" | jq -r '.artifacts | sort_by(.created_at) | last | .archive_download_url')
            echo "$ARTIFACT_URL"

            if [ "$ARTIFACT_URL" == "null" ] || [ -z "$ARTIFACT_URL" ]; then
              echo "No artifacts found in the source repository."
              exit 1
            fi

            ZIP="${REPO}.zip"
            curl -L -o "${ZIP}" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "${ARTIFACT_URL}"
            mkdir "${REPO}" 
            unzip -p "${ZIP}" | tar -xv -C "${REPO}" -f -
            ls -la
            ls -al "${REPO}"

          done 

      - name: Group files
        run: |
          mkdir public
          jq -c '.projects[]' manifest.json > temp.json

          HTML=""
          while read -r project; do
            REPO=$(echo "$project" | jq -r '.repo')
            mv "${REPO}" public
            HTML+="<div><a href=\"/${REPO}\">${REPO}</a></div>"
          done < temp.json

          rm temp.json
          echo "THE HTML: ${HTML}"
          ESCAPED_HTML=$(echo "$HTML" | sed 's/[\/&]/\\&/g')
          sed -i "s/<!-- REPOS -->/${ESCAPED_HTML}/g" index.html
          mv index.html public

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
